
/**
 * fraction/grid
 *
 * Author:   Robert Piirainen
 * Twitter:  @robertpiira
 *
 */


// SETTINGS
//------------------------------------------------------------------

$default-gutters: 2% !default;

// HELPERS
//------------------------------------------------------------------

@mixin border-box {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

@mixin stacks-horizontally {
  display: inline-block;

  // oldie
  *display: inline;
  *zoom: 1;
}

@mixin resets-context {
  letter-spacing: normal;
  vertical-align: top;
}

// BASE
//------------------------------------------------------------------

@mixin is-grid {
  letter-spacing: -0.31em;
}

@mixin is-grid-unit {
  @include resets-context;
  @include stacks-horizontally;
  @include border-box;
}

@mixin is-grid-field-unit {
  @include resets-context;
  @include border-box;
  display: block;
}

// PARTS
//------------------------------------------------------------------

// Define unit widths
@mixin has-width($target, $context) {
    width: calculate-widths($target, $context);
}

// Define unit gutters
@mixin has-gutters($gutters, $target: false, $context: false) {
  padding-left: calculate-gutters($gutters, $target, $context);
  padding-right: calculate-gutters($gutters, $target, $context);
}

// Define container offset gutters
@mixin has-offset-gutters($gutters, $target: false, $context: false) {
  margin-left: -#{calculate-gutters($gutters, $target, $context)};
  margin-right: -#{calculate-gutters($gutters, $target, $context)};
}

// GRID
//------------------------------------------------------------------

// Define grid container
@mixin grid($gutters: $default-gutters, $new-target: false, $new-context: false) {
  @include is-grid;
  @if ($gutters) {
    @include has-offset-gutters($gutters, $new-target, $new-context);
  }
}

// Define grid unit
@mixin grid-unit($target: false, $context: false, $gutters: $default-gutters, $new-target: false, $new-context: false) {
  @include is-grid-unit;
  @if ($target and $context) {
    @include has-width($target, $context);
  }
  @if ($gutters) {
    @include has-gutters($gutters, $new-target, $new-context);
  }
}

// Define grid field unit
@mixin grid-field-unit($gutters: $default-gutters, $new-target: false, $new-context: false) {
  @include is-grid-field-unit;
  @if ($gutters) {
    @include has-gutters($gutters, $new-target, $new-context);
  }
}

// FRACTION CALCULATORS
//------------------------------------------------------------------

// Calculate gutters
@function calculate-gutters($gutter, $numerator, $denominator) {
  @if ($numerator and $denominator) {
    @return ($denominator / $numerator) * $gutter;
  }
  @else {
    @return $gutter;
  }
}

// Calculate column widths
@function calculate-widths($numerator, $denominator) {
  @return percentage($numerator / $denominator);
}

// BOILERPLATE CLASSES
//------------------------------------------------------------------

.group {
  @include is-grid;
}

%basic-unit {
  @include border-box;
  @include resets-context;
}

.unit {
  @extend %basic-unit;
  @include stacks-horizontally;
}

.field-unit {
  @extend %basic-unit;
  display: block;
}
